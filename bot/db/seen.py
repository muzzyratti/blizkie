from datetime import datetime
from db.supabase_client import supabase
import logging
from random import choice


def get_next_activity_with_filters(user_id: int, age: int, time: str,
                                   energy: str, location: str):
    logging.info(
        f"[üîç filters] user={user_id}, age={age}, time={time}, energy={energy}, location={location}"
    )

    # 1. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    activities = supabase.table("activities") \
        .select("id") \
        .eq("age_min", age) \
        .execute().data

    all_ids = [a["id"] for a in activities]
    logging.info(f"[üì¶ all_ids] –Ω–∞–π–¥–µ–Ω–æ {len(all_ids)} –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π")
    
    if not all_ids:
        logging.warning("[‚ùå empty] –ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –≤ –±–∞–∑–µ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–∞–º")
        return None, False
    
    # 2. –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ
    seen = supabase.table("seen_activities") \
        .select("activity_id") \
        .eq("user_id", user_id) \
        .eq("age", age) \
        .eq("time", time) \
        .eq("energy", energy) \
        .eq("location", location) \
        .execute().data

    seen_ids = [s["activity_id"] for s in seen]
    logging.info(f"[üëÅÔ∏è seen] –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ {len(seen_ids)}")

    # 3. –í—ã—á–∏—Å–ª—è–µ–º –Ω–µ–ø–æ–∫–∞–∑–∞–Ω–Ω—ã–µ
    unseen_ids = list(set(all_ids) - set(seen_ids))
    logging.info(f"[üÜï unseen] –æ—Å—Ç–∞–ª–æ—Å—å {len(unseen_ids)} –Ω–µ–ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö")

    if unseen_ids:
        selected = choice(unseen_ids)
        logging.info(f"[‚úÖ choice] –≤—ã–±—Ä–∞–Ω id={selected}")
        return selected, False  # False = –Ω–µ –≤—Å–µ –ø–æ–∫–∞–∑–∞–Ω—ã

    if not all_ids:
        logging.warning(
            "[‚ùå empty] –ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –≤ –±–∞–∑–µ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–∞–º"
        )
        return None, False

    logging.info("[‚ôªÔ∏è reset] –≤—Å–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω—ã ‚Äî —Å–±—Ä–∞—Å—ã–≤–∞–µ–º")
    supabase.table("seen_activities") \
        .delete() \
        .eq("user_id", user_id) \
        .eq("age", age) \
        .eq("time", time) \
        .eq("energy", energy) \
        .eq("location", location) \
        .execute()

    selected = choice(all_ids)
    logging.info(f"[üîÑ after reset] –≤—ã–±—Ä–∞–Ω id={selected}")
    return selected, True  # True = –±—ã–ª —Ä–µ—Å–µ—Ç
